{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/header/header.component.ts","webpack:///src/app/core/header/header.component.html","webpack:///src/app/core/login/login.component.ts","webpack:///src/app/core/login/login.component.html","webpack:///src/app/core/user-profile/user-profile.component.ts","webpack:///src/app/core/user-profile/user-profile.component.html","webpack:///src/app/features/activity/activity.component.ts","webpack:///src/app/features/activity/activity.component.html","webpack:///src/app/features/dashboard/dashboard.component.ts","webpack:///src/app/features/dashboard/dashboard.component.html","webpack:///src/app/features/feed/feed.component.ts","webpack:///src/app/features/feed/feed.component.html","webpack:///src/app/features/post/post.component.ts","webpack:///src/app/features/post/post.component.html","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/core.service.ts","webpack:///src/app/shared/comments/comments.component.ts","webpack:///src/app/shared/comments/comments.component.html","webpack:///src/app/shared/notification/notification.component.ts","webpack:///src/app/shared/notification/notification.component.html","webpack:///src/app/shared/tags/tags.component.ts","webpack:///src/app/shared/tags/tags.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FooterComponent","HeaderComponent","router","currentUser","JSON","parse","localStorage","getItem","removeItem","navigateByUrl","appLogout","LoginComponent","coreService","route","allUsers","validUser","username","password","length","loggedInUser","forEach","user","userName","userEmail","errorMessage","getUsers","getUser","subscribe","response","console","log","error","result","setItem","stringify","loginToApp","UserProfileComponent","currentUserQuestion","filteredUserQuestions","allQuestions","question","author","push","event","quest","q","tags","filter","tag","filterData","ActivityComponent","allNotifications","getMessagesForCurrentUser","message","to","name","DashboardComponent","questionsToAnswer","filteredQuestionsToAnswer","notifications","getQuestionToAnswer","questionAdded","fetchNotifications","filterTag","FeedComponent","notification","answer","feed","change","currentValue","item","element","currentAnswered","Math","random","content","date","Date","subComment","from","substring","setNotification","answers","emit","PostComponent","messageService","dropdownList","selectedTags","questionContent","value","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","allowSearchFilter","items","getMilliseconds","toDateString","comment","add","severity","summary","detail","onItemSelect","onItemDeSelect","onDeSelectAll","onSelectAll","addQuestion","AuthGuardService","navigate","providedIn","CoreService","http","get","CommentsComponent","NotificationComponent","TagsComponent","currentTag","tagName","selectedTag","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './core/login/login.component';\nimport { DashboardComponent } from './features/dashboard/dashboard.component';\nimport { UserProfileComponent } from './core/user-profile/user-profile.component';\nimport {  AuthGuardService } from './services/auth.guard';\n\nconst routes: Routes = [\n  { path : '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent},\n  { path: 'dashboard', component: DashboardComponent, canActivate : [AuthGuardService]},\n  { path: 'userProfile', component: UserProfileComponent, canActivate : [AuthGuardService]},\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'askMe';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {ToastModule} from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './core/login/login.component';\nimport { DashboardComponent } from './features/dashboard/dashboard.component';\nimport { UserProfileComponent } from './core/user-profile/user-profile.component';\nimport { PostComponent } from './features/post/post.component';\nimport { CommentsComponent } from './shared/comments/comments.component';\nimport { TagsComponent } from './shared/tags/tags.component';\nimport { FeedComponent } from './features/feed/feed.component';\nimport { HeaderComponent } from './core/header/header.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { ActivityComponent } from './features/activity/activity.component';\nimport { NotificationComponent } from './shared/notification/notification.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    UserProfileComponent,\n    PostComponent,\n    CommentsComponent,\n    TagsComponent,\n    FeedComponent,\n    HeaderComponent,\n    FooterComponent,\n    ActivityComponent,\n    NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ToastModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body class=\"d-flex flex-column\">\n    \n    <footer id=\"sticky-footer\" class=\"py-2 bg-dark text-white-50\">\n      <div class=\"container text-center\">\n        <small>Copyright &copy; Your Website</small>\n      </div>\n    </footer>\n  </body>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Route } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor( private router: Router) { }\n  currentUser: any;\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  appLogout(){\n    localStorage.removeItem('currentUser');\n    this.router.navigateByUrl('/login');\n  }\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top-header\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"/userProfile\">{{currentUser?.name}}'s</a>\n    <span class=\"navbar-brand\">Ask ME!!!</span>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\n      <i class=\"navbar-toggler-icon\"></i>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/dashboard\">Home\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/userProfile\">My Profile</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"appLogout()\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { CoreService } from '../../services/core.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private coreService: CoreService, private route: Router) { }\n\n  userName: string;\n  password: string;\n  errorMessage: string;\n  allUsers: Array<any> = [];\n\n  ngOnInit(): void {\n    this.errorMessage = '';\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.coreService.getUser()\n        .subscribe( response => {\n          console.log(response);\n          this.allUsers = response;\n        }, error => {\n          console.log(error);\n        });\n  }\n\n  loginToApp(): void{\n\n    this.errorMessage = '';\n    const result =  this.validUser(this.userName, this.password);\n    if (result) {\n      localStorage.setItem('currentUser', JSON.stringify(result));\n      this.route.navigateByUrl('/dashboard');\n\n     }else{\n      this.errorMessage = 'Invalid Details, please try with correct details';\n     }\n  }\n\n  validUser = (username: string, password: string) => {\n    if (this.allUsers.length === 0){ return false; }\n    let loggedInUser = '';\n    this.allUsers.forEach( user => {\n      if ((user.userName === username && user.password === password)\n      || (user.userEmail === username && user.password === password)){\n        loggedInUser = user;\n        return;\n      }\n    });\n\n    return loggedInUser;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row no-gutter\">\n        <div class=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n        <div class=\"col-md-8 col-lg-6\">\n            <div class=\"login d-flex align-items-center py-5\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-9 col-lg-8 mx-auto\">\n                            <h3 class=\"login-heading mb-4\">Welcome to AskME!</h3>\n                            <label for=\"inputEmail\">User Name</label>\n                            <div class=\"form-label-group\">\n                                <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\"\n                                    required autofocus [(ngModel)]=\"userName\">\n                                \n                            </div>\n                            <label for=\"inputPassword\">Password</label>\n                            <div class=\"form-label-group\">\n                                <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\"\n                                    required [(ngModel)]=\"password\">\n                                \n                            </div>\n\n                            <button (click)=\"loginToApp()\"\n                                class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\n                                type=\"submit\">Sign in</button>\n                            <div class=\"text-center\" class=\"error-message\" *ngIf=\"errorMessage\">\n                                {{errorMessage}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n  currentUser: any;\n  currentUserQuestion: any = [];\n  filteredUserQuestions: any = [];\n  ngOnInit(): void {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n\n    const allQuestions = JSON.parse(localStorage.getItem('allQuestions'));\n    if (allQuestions) {\n      allQuestions.forEach(question => {\n        if (question.author === this.currentUser.userName) {\n          this.currentUserQuestion.push(question);\n          this.filteredUserQuestions.push(question);\n        }\n      });\n    }\n\n  }\n\n  filterData(event: any) {\n    this.filteredUserQuestions = [];\n\n    if (event === '') {\n      this.filteredUserQuestions = this.currentUserQuestion;\n      return;\n    }\n\n    this.currentUserQuestion.forEach(quest => {\n      const q = quest.tags.filter(tag => tag.id === event);\n\n      if (q.length > 0) {\n        this.filteredUserQuestions.push(quest);\n      }\n    });\n\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <link href=\"//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css\" rel=\"stylesheet\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-offset-2 col-md-8 col-lg-offset-3 col-lg-6\">\n                <div class=\"well profile\">\n                    <div class=\"col-sm-12\">\n                        <div class=\"col-xs-12 col-sm-8\">\n                            <h2>{{currentUser?.name}}</h2>\n                            <p><strong>Registered Email: </strong> {{currentUser?.email}} </p>\n                            <p><strong>About: </strong> {{currentUser?.about}} </p>\n                            <p><strong>Hobbies: </strong> {{currentUser?.hobbies}} </p>\n                            <p><strong>Active In: </strong>\n                                <span class=\"tags\" *ngFor=\"let tag of currentUser?.active\">{{tag}}</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <h3 class=\"my-4\">Questions Asked by You\n                        <small></small>\n                    </h3>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n\n            <div class=\"col\">\n                <app-feed [feed]=\"filteredUserQuestions\"></app-feed>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"card my-4\">\n                    <app-tags (tag)=\"filterData($event)\"></app-tags>\n                </div>\n                <app-activity></app-activity>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-activity',\n  templateUrl: './activity.component.html',\n  styleUrls: ['./activity.component.scss']\n})\nexport class ActivityComponent implements OnInit {\n\n  constructor() { }\n  allNotifications = [];\n  @Input() notifications: any;\n  ngOnInit(): void {\n    this.getMessagesForCurrentUser();\n  }\n\n  getMessagesForCurrentUser(){\n    this.allNotifications = JSON.parse(localStorage.getItem('notifications'));\n    if (!this.allNotifications){\n      this.allNotifications = [];\n    }\n\n    this.allNotifications.filter( message => message.to === JSON.parse(localStorage.getItem('currentUser')).name);\n\n  }\n\n}\n","<div class=\"card my-4\">\n    <h5 class=\"card-header\">Friends Activity</h5>\n    <div class=\"card-body\">\n        <li *ngFor=\"let item of allNotifications\"> {{item.message}}</li>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  allQuestions = [];\n  subComment: string;\n  currentUser: any;\n  questionsToAnswer = [];\n  filteredQuestionsToAnswer = [];\n  notifications = [];\n\n  ngOnInit(): void {\n\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    this.allQuestions = JSON.parse(localStorage.getItem('allQuestions'));\n    if (!this.allQuestions){ this.allQuestions = []; }\n    else{ this.getQuestionToAnswer(this.allQuestions); }\n  }\n\n  questionAdded(event: any){\n    this.allQuestions.push(event);\n    this.getQuestionToAnswer(this.allQuestions);\n\n    localStorage.setItem('allQuestions', JSON.stringify(this.allQuestions));\n  }\n\n  getQuestionToAnswer(question: Array<any>){\n    if (this.allQuestions){\n      this.allQuestions.forEach( quest => {\n        if (quest.author !== this.currentUser.userName){\n          this.questionsToAnswer.push(quest);\n          this.filteredQuestionsToAnswer.push(quest);\n        }\n      });\n    }\n  }\n\n  fetchNotifications(event){\n    this.notifications = event;\n  }\n\n  filterTag(event: any) {\n    this.filteredQuestionsToAnswer = [];\n\n    if (event === '') {\n      this.filteredQuestionsToAnswer = this.questionsToAnswer;\n      return;\n    }\n\n    this.questionsToAnswer.forEach(question => {\n      const q = question.tags.filter(tag => tag.id === event);\n      if (q.length > 0) {\n        this.filteredQuestionsToAnswer.push(question);\n      }\n    });\n\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n            <div class=\"card mb-4\">\n                <app-post (questionContent)=\"questionAdded($event)\"></app-post>\n            </div>\n            <h4 class=\"my-4\">Your Feed\n                <small></small>\n            </h4>\n            <span *ngIf=\"filteredQuestionsToAnswer.length == 0\">All caught up for today!!</span>\n            <app-feed [feed]=\"filteredQuestionsToAnswer\" (notification)=\"fetchNotifications($event)\" ></app-feed>\n        </div>\n        <div class=\"col-md-4\">\n            <div class=\"card my-4\">\n                <app-tags (tag)=\"filterTag($event)\"></app-tags>\n            </div>\n            <app-activity [notifications] = \"notifications\"></app-activity>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\ninterface AnswerInterface{\n  'id': number;\n  'content': string;\n  'date': any;\n  'author': string;\n  'subComment'?: any;\n  'tags'?: Array<any>;\n}\n\ninterface Notification{\n  'from': string;\n  'to': any;\n  'message': any;\n}\n\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, OnChanges {\n\n  constructor() { }\n  @Input() feed: any;\n  @Output() notification = new EventEmitter();\n  answer = '';\n  allNotifications = [];\n  ngOnInit(): void {\n    console.log(this.feed);\n  }\n\n  ngOnChanges(change: SimpleChanges){\n\n    if (change.feed){\n      this.feed = change.feed.currentValue;\n    }\n  }\n\n  putAnswer(item: any){\n    this.feed.forEach(element => {\n      element.currentAnswered = false;\n    });\n    item.currentAnswered = true;\n  }\n\n  cancelAnswer(item: any){\n    this.feed.forEach(element => {\n      element.currentAnswered = false;\n    });\n  }\n\n  submitAnswer(item: any){\n    const currentUser = JSON.parse(localStorage.getItem('currentUser')).userName;\n    const answer: AnswerInterface = {\n      id : Math.random(),\n      author : currentUser,\n      content: this.answer,\n      date: new Date(),\n      subComment: ''\n    };\n\n    const notification: Notification = {\n      to : item.author,\n      from : currentUser,\n      message : currentUser + ' Answered your question \\'' +  item.content.substring(0, 25) + '...\\''\n    };\n\n    this.setNotification(notification);\n\n    item.answers.push(answer);\n    item.currentAnswered = false;\n    localStorage.setItem('allQuestions', JSON.stringify(this.feed));\n  }\n\n  setNotification(notification: Notification){\n    this.allNotifications = JSON.parse(localStorage.getItem('notifications'));\n    if (!this.allNotifications){ this.allNotifications = []; }\n    this.allNotifications.push(notification);\n    localStorage.setItem('notifications', JSON.stringify(this.allNotifications));\n    this.notification.emit(this.allNotifications);\n  }\n}\n","<div class=\"card mb-4\" *ngFor=\"let item of feed.reverse()\">    \n        <div class=\"card-body\">\n            <p class=\"card-text\">{{item.content}}</p>\n            <div class=\"row all-tags\">\n                <span class=\"question-tag\" *ngFor=\"let tag of item.tags\">{{tag.value}}</span>\n            </div>\n            <div class=\"card-body\" *ngFor=\"let answer of item.answers\">\n                <p class=\"answers-comment-section\">{{answer.content}}</p>\n                <div class=\"card-footer text-muted\">\n                    Answered on {{answer.date | date}} by\n                    <a href=\"#\">{{answer.author}}</a>\n                </div>\n            </div>\n            <button class=\"btn btn-info\" (click)=\"putAnswer(item)\">Answer this &rarr;</button>\n        </div>\n        <div class=\"input-group\" *ngIf=\"item.currentAnswered\">\n            <textarea type=\"text\" class=\"form-control\" placeholder=\"And the answer is..???\"\n                [(ngModel)]=\"answer\"></textarea>\n        </div>\n        <div class=\"input-group\" *ngIf=\"item.currentAnswered\">\n            <button class=\"btn btn-danger\" (click)=\"cancelAnswer(item)\">Cancel</button> &nbsp;&nbsp;\n            <button class=\"btn btn-primary\" (click)=\"submitAnswer(item)\">Submit Answer</button>\n        </div>\n        <div class=\"card-footer text-muted\">\n            Posted on {{item.date | date}} by\n            <a href=\"#\">{{item.author}}</a>\n        </div>\n        <br/>\n    \n</div>\n\n\n<!-- Pagination -->\n<ul class=\"pagination justify-content-center mb-4\" *ngIf=\"feed.length >0\">\n    <li class=\"page-item\">\n        <a class=\"page-link\" >&larr; Older</a>\n    </li>\n    <li class=\"page-item disabled\">\n        <a class=\"page-link\" >Newer &rarr;</a>\n    </li>\n</ul>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { MessageService } from 'primeng/api';\n\ninterface QuestionInterface {\n  'id': number;\n  'content': string;\n  'date': any;\n  'author': string;\n  'comment'?: any;\n  'tags'?: Array<any>;\n  'answers'?: Array<any>;\n  'currentAnswered'?: boolean;\n}\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n  providers: [MessageService]\n})\nexport class PostComponent implements OnInit {\n\n  dropdownList = [];\n  selectedTags = [];\n  question: string;\n  user: any;\n  dropdownSettings: IDropdownSettings;\n  @Output() questionContent = new EventEmitter();\n\n  constructor(private messageService: MessageService) { }\n  ngOnInit() {\n    this.user = JSON.parse(localStorage.getItem('currentUser'));\n    this.dropdownList = [\n      { id: 'science', value: 'Science' },\n      { id: 'history', value: 'History' },\n      { id: 'politics', value: 'Politics' },\n      { id: 'literature', value: 'Literature' },\n      { id: 'socialLife', value: 'Social Life' },\n      { id: 'arts', value: 'Arts' }\n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'value',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      allowSearchFilter: true\n    };\n  }\n  onItemSelect(item: any) {\n    this.selectedTags.push(item);\n  }\n  onSelectAll(items: any) {\n    this.selectedTags = items;\n  }\n\n  onItemDeSelect(item: any) {\n    console.log(item);\n    this.selectedTags = this.selectedTags.filter(tag => {\n      return tag.id !== item.id;\n    });\n\n    console.log(this.selectedTags);\n  }\n\n  onDeSelectAll(item: any) {\n    this.selectedTags = [];\n  }\n\n  addQuestion() {\n\n    const question: QuestionInterface = {\n      id: new Date().getMilliseconds(),\n      content: this.question,\n      date: new Date().toDateString(),\n      answers: [],\n      tags: this.selectedTags,\n      author: this.user.userName,\n      comment: [],\n      currentAnswered: false\n    };\n    this.messageService.add({\n      severity: 'success',\n      summary: 'Question Added',\n      detail: 'Your question has been added Successfully.We are reaching out to experts to get the answer'\n    }\n    );\n    this.questionContent.emit(question);\n  }\n\n}\n","<p-toast position=\"top-right\"></p-toast>\n<div class=\"card my-4\">\n    <h5 class=\"card-header\">Ask Your Question</h5>\n    <div class=\"card-body\">\n        <div class=\"input-group\">\n            <textarea type=\"text\" class=\"form-control\" placeholder=\"What if..???\" [(ngModel)]=\"question\"></textarea>\n        </div>\n        <div class=\"input-group\">\n            <ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'Select Tags'\" [data]=\"dropdownList\"\n                (onSelect)=\"onItemSelect($event)\" (onDeSelect)=\"onItemDeSelect($event)\"\n                (onDeSelectAll)=\"onDeSelectAll($event)\" (onSelectAll)=\"onSelectAll($event)\">\n            </ng-multiselect-dropdown>\n\n            <span class=\"input-group button-action\">\n                <button class=\"btn btn-info float-right\" type=\"button\" (click)=\"addQuestion()\">Ask!</button>\n            </span>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public router: Router) {}\r\n  canActivate(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (!user) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUser(): Observable<any>{\n    return this.http.get('assets/users.json');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"answers-comment-section\"></p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>notification works!</p>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.scss']\n})\nexport class TagsComponent implements OnInit {\n\n  constructor() { }\n  @Output() tag = new EventEmitter();\n  currentTag = '';\n\n  ngOnInit(): void {\n  }\n\n  selectedTag(tagName: string){\n    this.currentTag = tagName;\n    this.tag.emit(tagName);\n  }\n\n}\n","<h5 class=\"card-header\">Categories</h5>\n<div class=\"card-body\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <ul class=\"list-unstyled mb-0\">\n                <li>\n                    <a [ngClass]=\"currentTag == ''? 'active-link' : 'inactive-link'\"  (click)=\"selectedTag('')\">All</a>\n                </li>\n                <li>\n                    <a [ngClass]=\"currentTag == 'science'? 'active-link' : 'inactive-link'\" (click)=\"selectedTag('science')\">Science</a>\n                </li>\n                <li>\n                    <a [ngClass]=\"currentTag == 'history'? 'active-link' : 'inactive-link'\" (click)=\"selectedTag('history')\">History</a>\n                </li>\n                <li>\n                    <a [ngClass]=\"currentTag == 'politics'? 'active-link' : 'inactive-link'\" (click)=\"selectedTag('politics')\">Politics</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-lg-6\">\n            <ul class=\"list-unstyled mb-0\">\n                <li>\n                    <a [ngClass]=\"currentTag == 'literature'? 'active-link' : 'inactive-link'\" (click)=\"selectedTag('literature')\">Literature</a>\n                </li>\n                <li>\n                    <a [ngClass]=\"currentTag == 'socialLife'? 'active-link' : 'inactive-link'\"(click)=\"selectedTag('socialLife')\">Social Life</a>\n                </li>\n                <li>\n                    <a [ngClass]=\"currentTag == 'arts'? 'active-link' : 'inactive-link'\" (click)=\"selectedTag('arts')\">Arts</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}